@use 'styles/abstracts/variables' as *;

// Base styles

.outer {
	border-radius: 10px;
	min-height: 20vh;
}

.inner {
	display: flex;
	flex-direction: column;
}

// Justification

.isJustified {
	justify-content: space-between;
}

// Interactive

.isInteractive {
	cursor: pointer;
	transition: all 0.1s ease-in-out;
	display: inherit;
	gap: inherit;
	text-decoration: none;

	&:hover {
		transform: translateY(-4px);
		box-shadow: 0 4px 10px rgba(0, 0, 0, 0.075);
		background: $color-primary-300;

		& > h1, h2, h3, h4, h5, h6, p {
			color: $color-neutral-100;
		}
	}
}

// Sizes

$sizes: (
	'small',
	'medium',
	'large',
	'x-large',
	'full',
);

@each $size, $value in $sizes {
	.size--#{$size} {
		@if ($size == 'small') {
			@media (min-width: 350px) {
				grid-column: span 6;
			}
			@media (min-width: 1000px) {
				grid-column: span 4;
			}
			@media (min-width: 1200px) {
				grid-column: span 3;
			}
		}

		@if ($size == 'medium') {
			@media (min-width: 350px) {
				grid-column: span 12;
			}
			@media (min-width: 768px) {
				grid-column: span 6;
			}
			@media (min-width: 1000px) {
				grid-column: span 4;
			}
		}

		@if ($size == 'large') {
			@media (min-width: 350px) {
				grid-column: span 12;
			}
			@media (min-width: 1200px) {
				grid-column: span 6;
			}
		}

		@if ($size == 'x-large') {
			@media (min-width: 350px) {
				grid-column: span 12;
			}
			@media (min-width: 1200px) {
				grid-column: span 8;
			}
		}

		@if ($size == 'full') {
			grid-column: span 12;
		}
	}
}

// Background

$backgrounds: (
	'primary': $color-primary-300,
	'secondary': $color-secondary-200,
	'tertiary': $color-tertiary-200,
	'dark': $color-neutral-600,
	'white': $color-neutral-100,
);

@each $background, $color in $backgrounds {
	.#{$background} {
		background: $color;
	}
}

// Padding

$paddings: (
	'none': 0,
	'small': 0.5rem,
	'medium': 1rem,
	'large': 1.5rem,
	'x-large': 2.5rem,
);

@each $padding, $value in $paddings {
	.padding--#{$padding} {
		padding: $value;
	}
}

// Gap

$gaps: (
	'none': 0,
	'small': 0.5rem,
	'medium': 1rem,
	'large': 1.5rem,
	'x-large': 2.5rem,
);

@each $gap, $value in $gaps {
	.gap--#{$gap} {
		gap: $value;
	}
}
